# TMX를 다른 data 구조로 바꿔달라는 프롬프트. 사용하지 않음. ChatGPT에 아카이빙한 챗을 사용함.
If you read the file at tmx_dir, it is XML formatted. In its body, there are many tu elements. Each tu element has creationdate, changedate, and 2 tuv elements. If a tuv element has xml:lang="KO", it has Korean contents in its seg element. If a tuv element has xml:lang="EN", it has English contents in its seg element. So, this long list of tu elements is the Korean-English translation records, and each record (tu) is created at creationdate, and modified at changedate. Given this status, write me the python codes that parse this file, make a data structure that can store all the translation records, having 4 attributes (or columns): creationdate, changedate, Korean, English. After creating the data structure, save it as a file. There are 2 important thing here. The first one is that you should choose the data strture that can offer the fastest search speed ever for python. The second one is that you should not use XML parsing library because it is too slow for generation of parsed tree. Besides, the input file is not in pure XML format, so it can cause errors during parsing. Instead, you are only allowed to use Regex (re module) to parse the file and create the data structure. One more thing, do not modify the exising codes. Just write me new codes. If you have any question, please ask me.

# write me the python codes that read the file at tmx_dir, and ask me "What terms or sentence do you want to search in translation history?" If I type in the Korean terms or Korean sentence with my keyboard and press Enter, plese search the appearance of these input strings thorugh all seg elements of all xml:lang="KO" tuv elements of this list of tu, and report me the results in a organized way, like table. The table should have 4 columns: creationdate, changedate, Korean, English. If there are multiple results, please show me all of them. If there is no result, please show me "No result found." If I type in "exit" and press Enter, please exit the program.
